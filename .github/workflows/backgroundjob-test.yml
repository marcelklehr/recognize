name: Background job test

on:
  pull_request:
  push:

env:
  APP_NAME: recognize

jobs:
  php:
    runs-on: ubuntu-latest

    strategy:
      # do not stop on another job's failure
      fail-fast: false
      matrix:
        php-versions: ['7.3']
        databases: ['sqlite', 'mysql', 'pgsql']
        server-versions: ['stable20', 'stable21', 'stable22', 'stable23']
        container: ['']
        include:
          - server-versions: stable22
            php-versions: 7.4
            databases: sqlite
          - server-versions: stable23
            php-versions: 8.0
            databases: sqlite
          - server-versions: stable23
            php-versions: 8.0
            databases: sqlite
            container: nextcloud:fpm-alpine

    name: Test classify job on ${{ matrix.databases }}-${{ matrix.server-versions }}-php${{ matrix.php-versions }}

    container: ${{ matrix.container }}

    env:
      MYSQL_PORT: 4444
      PGSQL_PORT: 4445

    services:
      mysql:
        image: mariadb:10.5
        ports:
          - 4444:3306/tcp
        env:
          MYSQL_ROOT_PASSWORD: rootpassword
        options: --health-cmd="mysqladmin ping" --health-interval 5s --health-timeout 2s --health-retries 5
      postgres:
        image: postgres
        ports:
          - 4445:5432/tcp
        env:
          POSTGRES_USER: root
          POSTGRES_PASSWORD: rootpassword
          POSTGRES_DB: nextcloud
        options: --health-cmd pg_isready --health-interval 5s --health-timeout 2s --health-retries 5

    steps:
      - name: Get Alpine Linux ready
        if: ${{ matrix.container != ''}}
        run: |
          apk update
          apk upgrade
          apk add bash
          apk add git

      - name: Checkout server
        uses: actions/checkout@v2
        with:
          repository: nextcloud/server
          ref: ${{ matrix.server-versions }}

      - name: Checkout submodules
        shell: bash
        run: |
          auth_header="$(git config --local --get http.https://github.com/.extraheader)"
          git submodule sync --recursive
          git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1

      - name: Set up php ${{ matrix.php-versions }}
        uses: shivammathur/setup-php@v1
        with:
          php-version: ${{ matrix.php-versions }}
          tools: phpunit
          extensions: mbstring, iconv, fileinfo, intl, sqlite, pdo_mysql, pdo_sqlite, pgsql, pdo_pgsql, gd, zip

      - name: Checkout app
        uses: actions/checkout@v2
        with:
          path: apps/${{ env.APP_NAME }}

      - name: Read package.json node and npm engines version
        uses: skjnldsv/read-package-engines-version-actions@v1.1
        id: versions
        with:
          path: apps/${{ env.APP_NAME }}
          fallbackNode: '^12'
          fallbackNpm: '^6'

      - name: Set up node ${{ steps.versions.outputs.nodeVersion }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ steps.versions.outputs.nodeVersion }}

      - name: Set up npm ${{ steps.versions.outputs.npmVersion }}
        run: npm i -g npm@"${{ steps.versions.outputs.npmVersion }}"

      - name: Install app
        working-directory: apps/${{ env.APP_NAME }}
        run: |
          composer install --ignore-platform-req=php --no-dev
          make all

      - name: Set up Nextcloud and install app
        if: ${{ matrix.databases != 'pgsql'}}
        run: |
          sleep 25
          mkdir data
          ./occ maintenance:install --verbose --database=${{ matrix.databases }} --database-name=nextcloud --database-host=127.0.0.1 --database-port=$MYSQL_PORT --database-user=root --database-pass=rootpassword --admin-user admin --admin-pass password
          ./occ app:enable -vvv -f ${{ env.APP_NAME }}
          php -S localhost:8080 &

      - name: Set up Nextcloud and install app
        if: ${{ matrix.databases == 'pgsql'}}
        run: |
          sleep 25
          mkdir data
          ./occ maintenance:install --verbose --database=${{ matrix.databases }} --database-name=nextcloud --database-host=127.0.0.1 --database-port=$PGSQL_PORT --database-user=root --database-pass=rootpassword --admin-user admin --admin-pass password
          ./occ app:enable -vvv -f ${{ env.APP_NAME }}
          php -S localhost:8080 &

      - name: Install
        run: |
          ./occ app:enable -vvv ${{ env.APP_NAME }}

      - name: Set pure-js mode
        run: |
          ./occ config:app:set --value false recognize tensorflow.purejs

      - name: Set imagenet.enabled
        run: |
          ./occ config:app:set --value true recognize imagenet.enabled
      - name: Set faces.enabled
        run: |
          ./occ config:app:set --value true recognize faces.enabled
      - name: Set landmarks.enabled
        run: |
          ./occ config:app:set --value true recognize landmarks.enabled

      - name: Upload files
        run: |
          for filename in apps/${{ env.APP_NAME }}/test/res/*; do
            curl -u 'admin:password' -T "$filename" 'http://localhost:8080/remote.php/webdav/'
          done

      - name: Run cron
        run: |
          php cron.php

      - name: Check log
        run: |
          ! tail -50 data/nextcloud.log | grep -q 'Classifier process error'
